/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CloseType } from './interfaces';
export class NgAlertComponent {
    constructor() {
        this.messageChange = new EventEmitter();
        this.closeType = CloseType.TIMES;
        this.closeTypes = CloseType;
    }
    /**
     * @return {?}
     */
    get message() {
        return this.rawMessage;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set message(value) {
        this.rawMessage = value;
        this.messageChange.emit(this.rawMessage);
    }
}
NgAlertComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-alert',
                template: "<div *ngIf=\"message\" class=\"alert alert-{{message.type}}\" [ngClass]=\"{padding:closeType===closeTypes.TIMES}\">\n  <h5 *ngIf=\"message.title\">{{message.title}}</h5>\n  <span [innerHTML]=\"message.message\">\n  </span>\n\n  <button *ngFor=\"let button of message.buttons\" class=\"{{button.css}}\" (click)=\"button.action?button.action():true\">\n    {{button.label}}\n  </button>\n\n  <button (click)=\"message=null\" *ngIf=\"dismissable && closeType===closeTypes.TIMES\" type=\"button\" class=\"close\" data-dismiss=\"alert\"\n                                                                                                                 aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <p align=\"center\" *ngIf=\"dismissable && closeType===closeTypes.NORMAL\">\n  <a (click)=\"message=null\">close</a>\n  </p>\n\n</div>\n"
            }] }
];
NgAlertComponent.propDecorators = {
    dismissable: [{ type: Input }],
    messageChange: [{ type: Output }],
    closeType: [{ type: Input }],
    message: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    NgAlertComponent.prototype.dismissable;
    /** @type {?} */
    NgAlertComponent.prototype.rawMessage;
    /** @type {?} */
    NgAlertComponent.prototype.messageChange;
    /** @type {?} */
    NgAlertComponent.prototype.closeType;
    /** @type {?} */
    NgAlertComponent.prototype.closeTypes;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRoZW80dS9uZy1hbGVydC8iLCJzb3VyY2VzIjpbImxpYi9hbGVydC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFZLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQU9uRCxNQUFNOzs2QkFJc0IsSUFBSSxZQUFZLEVBQUU7eUJBQ1osU0FBUyxDQUFDLEtBQUs7MEJBQ2xDLFNBQVM7Ozs7O0lBRXRCLElBQ0ksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztLQUN4Qjs7Ozs7SUFFRCxJQUFJLE9BQU8sQ0FBQyxLQUFlO1FBQ3pCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUMxQzs7O1lBckJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsKzJCQUFtQzthQUVwQzs7OzBCQUdFLEtBQUs7NEJBRUwsTUFBTTt3QkFDTixLQUFLO3NCQUdMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU1lc3NhZ2UsIENsb3NlVHlwZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25nLWFsZXJ0JyxcbiAgdGVtcGxhdGVVcmw6ICdhbGVydC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgTmdBbGVydENvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgZGlzbWlzc2FibGU6IGJvb2xlYW47XG4gIHJhd01lc3NhZ2U6IElNZXNzYWdlO1xuICBAT3V0cHV0KCkgbWVzc2FnZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQElucHV0KCkgY2xvc2VUeXBlOiBDbG9zZVR5cGUgPSBDbG9zZVR5cGUuVElNRVM7XG4gIGNsb3NlVHlwZXMgPSBDbG9zZVR5cGU7XG5cbiAgQElucHV0KClcbiAgZ2V0IG1lc3NhZ2UoKTogSU1lc3NhZ2Uge1xuICAgIHJldHVybiB0aGlzLnJhd01lc3NhZ2U7XG4gIH1cblxuICBzZXQgbWVzc2FnZSh2YWx1ZTogSU1lc3NhZ2UpIHtcbiAgICB0aGlzLnJhd01lc3NhZ2UgPSB2YWx1ZTtcbiAgICB0aGlzLm1lc3NhZ2VDaGFuZ2UuZW1pdCh0aGlzLnJhd01lc3NhZ2UpO1xuICB9XG5cblxufVxuIl19