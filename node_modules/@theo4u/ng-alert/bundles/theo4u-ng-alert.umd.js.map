{"version":3,"file":"theo4u-ng-alert.umd.js.map","sources":["ng://@theo4u/ng-alert/lib/interfaces.ts","ng://@theo4u/ng-alert/lib/alert.service.ts","ng://@theo4u/ng-alert/lib/alert.component.ts","ng://@theo4u/ng-alert/lib/alert.module.ts"],"sourcesContent":["export enum MessageType {\n  success = 'success',\n    error = 'error',\n    info = 'info',\n    warning = 'warning'\n}\n\nexport interface IMessage {\n  type: MessageType;\n  message: string;\n  title?: string;\n  buttons?: Array<{\n    label: string,\n    action?: Function,\n    css?: string\n  }>;\n}\n\nexport enum CloseType {\n  TIMES, NORMAL\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { IMessage } from './interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgAlertService {\n  private _messageSource = new Subject<IMessage>();\n  constructor() { }\n\n  /**\n   * this returns our alert message source\n   */\n  getSource() {\n    return this._messageSource;\n  }\n\n  /**\n   * push our message to our alert\n   * @param message type IMessage to be pushed to our listeners/subscribers\n   */\n  push(message: IMessage) {\n    this._messageSource.next(message);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IMessage, CloseType } from './interfaces';\n\n@Component({\n  selector: 'ng-alert',\n  templateUrl: 'alert.component.html',\n  styles: []\n})\nexport class NgAlertComponent {\n\n  @Input() dismissable: boolean;\n  rawMessage: IMessage;\n  @Output() messageChange = new EventEmitter();\n  @Input() closeType: CloseType = CloseType.TIMES;\n  closeTypes = CloseType;\n\n  @Input()\n  get message(): IMessage {\n    return this.rawMessage;\n  }\n\n  set message(value: IMessage) {\n    this.rawMessage = value;\n    this.messageChange.emit(this.rawMessage);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { NgAlertComponent } from './alert.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgAlertComponent],\n  exports: [NgAlertComponent]\n})\nexport class NgAlertModule { }\n"],"names":["Subject","Injectable","EventEmitter","Component","Input","Output","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;QACE,SAAU,SAAS;QACjB,OAAQ,OAAO;QACf,MAAO,MAAM;QACb,SAAU,SAAS;;;;QAerB,QAAK,EAAE,SAAM;;wBAAb,KAAK;wBAAE,MAAM;;;;;;ACnBf;QASE;kCADyB,IAAIA,YAAO,EAAY;SAC/B;;;;;;;;QAKjB,kCAAS;;;;YAAT;gBACE,OAAO,IAAI,CAAC,cAAc,CAAC;aAC5B;;;;;;;;;;QAMD,6BAAI;;;;;YAAJ,UAAK,OAAiB;gBACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACnC;;oBApBFC,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;6BAND;;;;;;;ACAA;;iCAY4B,IAAIC,eAAY,EAAE;6BACZ,SAAS,CAAC,KAAK;8BAClC,SAAS;;QAEtB,sBACI,qCAAO;;;gBADX;gBAEE,OAAO,IAAI,CAAC,UAAU,CAAC;aACxB;;;;gBAED,UAAY,KAAe;gBACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC1C;;;WALA;;oBAhBFC,YAAS,SAAC;wBACT,QAAQ,EAAE,UAAU;wBACpB,+2BAAmC;qBAEpC;;;kCAGEC,QAAK;oCAELC,SAAM;gCACND,QAAK;8BAGLA,QAAK;;+BAhBR;;;;;;;ACAA;;;;oBAICE,WAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE,CAAC,gBAAgB,CAAC;wBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;4BAVD;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
