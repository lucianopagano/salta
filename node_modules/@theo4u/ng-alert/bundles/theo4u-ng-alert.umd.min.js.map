{"version":3,"sources":["ng://@theo4u/ng-alert/lib/interfaces.ts","ng://@theo4u/ng-alert/lib/alert.service.ts","ng://@theo4u/ng-alert/lib/alert.component.ts","ng://@theo4u/ng-alert/lib/alert.module.ts"],"names":["TIMES","NORMAL","NgAlertService","Subject","prototype","getSource","this","_messageSource","push","message","next","Injectable","args","providedIn","NgAlertComponent","EventEmitter","CloseType","Object","defineProperty","rawMessage","value","messageChange","emit","Component","selector","template","Input","Output","NgAlertModule","NgModule","imports","CommonModule","declarations","exports","success","error","info","warning"],"mappings":"uYAmBEA,MAAA,EAAOC,OAAA,OAAPD,OAAK,YAAEC,QAAM,SCnBf,IAAAC,EAAA,WASE,SAAAA,wBADyB,IAAIC,EAAAA,eAM7BD,EAAAE,UAAAC,UAAA,WACE,OAAOC,KAAKC,gBAOdL,EAAAE,UAAAI,KAAA,SAAKC,GACHH,KAAKC,eAAeG,KAAKD,wBAnB5BE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJALd,GCAAC,EAAA,2CAY4B,IAAIC,EAAAA,4BACEC,EAAUhB,sBAC7BgB,SAEbC,OAAAC,eACIJ,EAAAV,UAAA,UAAO,KADX,WAEE,OAAOE,KAAKa,gBAGd,SAAYC,GACVd,KAAKa,WAAaC,EAClBd,KAAKe,cAAcC,KAAKhB,KAAKa,iEApBhCI,EAAAA,UAASX,KAAA,CAAC,CACTY,SAAU,WACVC,SAAA,22BAKCC,EAAAA,6BAEAC,EAAAA,0BACAD,EAAAA,uBAGAA,EAAAA,WAhBH,GCAAE,EAAA,oDAICC,EAAAA,SAAQjB,KAAA,CAAC,CACRkB,QAAS,CACPC,EAAAA,cAEFC,aAAc,CAAClB,GACfmB,QAAS,CAACnB,SATZ,kBHCEoB,QAAU,UACRC,MAAQ,QACRC,KAAO,OACPC,QAAU","sourcesContent":["export enum MessageType {\n  success = 'success',\n    error = 'error',\n    info = 'info',\n    warning = 'warning'\n}\n\nexport interface IMessage {\n  type: MessageType;\n  message: string;\n  title?: string;\n  buttons?: Array<{\n    label: string,\n    action?: Function,\n    css?: string\n  }>;\n}\n\nexport enum CloseType {\n  TIMES, NORMAL\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { IMessage } from './interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgAlertService {\n  private _messageSource = new Subject<IMessage>();\n  constructor() { }\n\n  /**\n   * this returns our alert message source\n   */\n  getSource() {\n    return this._messageSource;\n  }\n\n  /**\n   * push our message to our alert\n   * @param message type IMessage to be pushed to our listeners/subscribers\n   */\n  push(message: IMessage) {\n    this._messageSource.next(message);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IMessage, CloseType } from './interfaces';\n\n@Component({\n  selector: 'ng-alert',\n  templateUrl: 'alert.component.html',\n  styles: []\n})\nexport class NgAlertComponent {\n\n  @Input() dismissable: boolean;\n  rawMessage: IMessage;\n  @Output() messageChange = new EventEmitter();\n  @Input() closeType: CloseType = CloseType.TIMES;\n  closeTypes = CloseType;\n\n  @Input()\n  get message(): IMessage {\n    return this.rawMessage;\n  }\n\n  set message(value: IMessage) {\n    this.rawMessage = value;\n    this.messageChange.emit(this.rawMessage);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { NgAlertComponent } from './alert.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgAlertComponent],\n  exports: [NgAlertComponent]\n})\nexport class NgAlertModule { }\n"]}